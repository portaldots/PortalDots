@mixin btn(
  $color,
  $background,
  $hover-background,
  $border-color,
  $has-shadow: false
) {
  @if ($background == transparent) {
    background: transparent;
  } @else {
    // rgba で $background が指定されている場合、ボタンの背面にある要素の
    // 背景色に干渉され、ボタンが意図しない色になってしまうことがある。
    // 白色のベースの上に $background を重ねて表示することで、
    // 背面要素の背景色に関わらずボタンが同じ色で表示されるようにしている。
    background: linear-gradient(to top, $background, $background),
      $color-bg-white;
  }

  border: 1px solid $border-color;
  color: $color;
  &:not([disabled]):hover,
  &:not(.disabled):hover {
    background: linear-gradient(to top, $hover-background, $hover-background),
      $color-bg-white;
    border-color: $hover-background;
  }
  &:not([disabled]):active,
  &:not(.disabled):active {
    background: linear-gradient(to top, $background, $background),
      $color-bg-white;
  }
  @if ($has-shadow) {
    box-shadow: 0 0.25rem 0.75rem $color-box-shadow;
    &:not([disabled]):hover,
    &:not(.disabled):hover {
      box-shadow: 0 0.5rem 0.75rem $color-box-shadow;
    }
    &:not([disabled]):active,
    &:not(.disabled):active {
      box-shadow: 0 0.1rem 0.3rem $color-box-shadow;
    }
  }
}

button {
  color: $color-text;
}

body:not(.body-editor-v1):not(.body-v1) {
  .btn {
    appearance: none;
    background: none;
    border: 0;
    border-radius: $border-radius;
    cursor: pointer;
    display: inline-block;
    line-height: 1.15;
    padding: 0.75rem $spacing-md;
    text-align: center;
    text-decoration: none;
    transition: #{$transition-base-fast} background-color,
      #{$transition-base-fast} box-shadow, #{$transition-base-fast} transform;
    white-space: nowrap;
    &:disabled,
    &.disabled {
      cursor: not-allowed;
      opacity: 0.5;
      pointer-events: none;
    }
    &:hover {
      text-decoration: none;
    }
    &:focus {
      text-decoration: none;
    }
    &.is-primary {
      @include btn(
        $color-bg-white,
        $color-primary,
        #{rgba(var(--rgb-color-primary), 80%)},
        $color-primary,
        true
      );
    }
    &.is-primary-inverse {
      @include btn(
        $color-primary,
        $color-bg-white,
        #{rgba(var(--rgb-color-primary), 15%)},
        $color-bg-white,
        true
      );
    }
    &.is-secondary {
      @include btn($color-text, $color-bg-white, $color-bg-grey, $color-border);
    }
    &.is-transparent {
      @include btn($color-text, transparent, $color-bg-white, $color-border);
    }
    &.is-danger {
      @include btn(
        $color-bg-white,
        $color-danger,
        #{rgba(var(--rgb-color-danger), 80%)},
        $color-danger,
        true
      );
    }
    &.is-success {
      @include btn(
        $color-bg-white,
        $color-success,
        #{rgba(var(--rgb-color-success), 80%)},
        $color-success,
        true
      );
    }
    &.is-block {
      display: block;
      width: 100%;
    }
    &.is-no-border {
      border: none;
    }
    &.is-no-shadow {
      box-shadow: none;
    }
    &.is-wide {
      padding-left: $spacing-lg;
      padding-right: $spacing-lg;
    }
    &.is-sm {
      font-size: 0.9rem;
      padding: $spacing-xs $spacing-sm;
    }
  }
}
