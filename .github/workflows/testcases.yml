# This file contains portions of code licensed under MIT Licnese.
#
# https://github.com/actions/starter-workflows
#
# MIT License
#
# Copyright (c) 2020 GitHub
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE. THIS LICENSE DOES NOT GRANT YOU RIGHTS TO USE ANY CONTRIBUTORS'
# NAME, LOGO, OR TRADEMARKS.

name: CI

on:
  push:
    branches: [3.x, 4.x]
  pull_request:
    branches: [3.x, 4.x]

env:
  APP_NOT_INSTALLED: false
  APP_NAME: 継続的インテグレーション祭
  APP_DEBUG: true
  APP_ENV: testing
  APP_KEY: base64:xWEI4OS7YZ0rIxmMfJaAgbRiMkOkFsf5Bn1QEO+iP4k=
  DB_CONNECTION: mysql
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_DATABASE: ci_database
  DB_USERNAME: root
  DB_PASSWORD: root
  MYSQL_ALLOW_EMPTY_PASSWORD: true
  PORTAL_ADMIN_NAME: 継続的インテグレーション実行委員会
  PORTAL_CONTACT_EMAIL: info@example.com
  PORTAL_UNIVEMAIL_DOMAIN: univemail.example.com

jobs:
  frontend-tests:

    runs-on: ubuntu-latest

    steps:
    - name: Install Dependencies
      uses: actions/checkout@v2
    - name: Use Node.js (Yarnをインストールするため)
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
    - name: Install Yarn
      run: npm install -g yarn
    # https://github.com/actions/setup-node/issues/182#issuecomment-966885975
    - name: Use Node.js (Yarnパッケージのキャッシュを有効化するため)
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        cache: yarn
      if: ${{ !env.ACT }}
    - name: Install Dependencies
      run: yarn install
    - name: Bladeファイルのフォーマット
      run: yarn blade-formatter --write resources/views/v2/**/*.blade.php
    - run: yarn dev
    - run: yarn eslint-check
    - run: yarn stylelint-check


  backend-tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: [7.3, 7.4, 8.0, 8.1]

    services:
      mysql:
        image: mysql:5.7
        ports:
          - "${{ env.DB_PORT }}:3306"
        env:
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: ${{ matrix.php-version }}
    - uses: actions/checkout@v2
    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
      if: ${{ !env.ACT }}
    - uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
      if: ${{ !env.ACT }}
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: phpcs
      run: composer phpcs
    - name: マイグレーション
      run: php artisan migrate --env=testing --force
    - name: PHPUnitでテスト実行
      run: vendor/bin/phpunit --coverage-clover=coverage.xml
    - name: コードカバレッジを送信
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml
        verbose: true
