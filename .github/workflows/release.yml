on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # Composer Cache
      # - name: Get Composer Cache Directory
      #   id: composer-cache
      #   run: |
      #     echo "::set-output name=dir::$(composer config cache-files-dir)"
      # - name: Restore Composer Cache
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ steps.composer-cache.outputs.dir }}
      #     key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-composer-
      # Yarn Cache
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - name: Restore Yarn Cache
      #   uses: actions/cache@v1
      #   id: yarn-cache
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-
      # Compile and Release
      - name: Prepare compile
        # vendor ディレクトリの除外には、最初にスラッシュをつけている。これにより resources フォルダ内にある vendor ディレクトリが除外されてしまうのを防いでいる
        run: |
          rsync -av --update --delete --stats ./ ./dist/ --exclude='dist/' --exclude='docker_dev/' --exclude='.git/' --exclude='.github/' --exclude='/vendor/' --exclude='node_modules/' --exclude='.circleci/' >& /dev/null
      - name: Install PHP dependencies
        run: composer install --optimize-autoloader --no-dev
        working-directory: dist
      - name: Install JS dependencies
        run: yarn install
        working-directory: dist
      - name: Compile assets
        run: yarn run production
        working-directory: dist
      - name: Build project
        run: zip -9 -r ../PortalDots .* * -x node_modules/\* composer.json composer.lock package.json yarn.lock webpack.mix.js
        working-directory: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./PortalDots.zip
          asset_name: PortalDots.zip
          asset_content_type: application/zip
